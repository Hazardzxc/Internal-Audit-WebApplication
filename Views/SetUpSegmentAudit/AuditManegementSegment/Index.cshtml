@model STD.Models.DB.Faculty
@using STD.Models.DB
@{
    ViewData["Title"] = "ประเด็นการตรวจสอบ";

    if (Model != null)
    {
        ViewData["Bar"] = Html.Raw($"<a href='{Url.Action("Index", "SetUpSegmentAudit")}'>ส่วนงาน</a> > {Model.FacultyName}");
    }

    List<AuditIssueMain> _ListAuditIssueMain = new List<AuditIssueMain>();
    using (AuditManager_Connect DB = new AuditManager_Connect())
    {
        _ListAuditIssueMain = DB.AuditIssueMains.ToList();
    }
}

<style>
    #AuditManegementSegmentTable tbody > tr :hover {
        cursor: pointer;
    }
</style>

<div class="row" id="Segment">
    <div class="col-md-12 mb-3">
        <div class="card">
            <div class="card-header bg-primary">
                <h2 class="card-title mt-1" id="TitleContent">ตั้งค่าประเด็นการตรวจสอบ</h2>
            </div>
            <div class="card-body">
                <div id="Content"></div>
            </div>
        </div>
    </div>
    <div class="col-md-12 text-left mb-3">
        <button type="button" class="btn btn-primary" onclick="AddAuditManegementSegment()">
            <i class="fas fa-plus"></i> ตั้งค่าประเด็น
        </button>
        <button type="button" class="btn btn-warning" onclick="GetFormWorkingPaper()">
            <i class="fas fa-paper-plane"></i> กระดาษทำการ <span id="TagAuditIssueMainName"></span>
        </button>
        <input type="hidden" id="AuditManegementSegmentID" value="" />
    </div>
    <div class="col-md-12">
        <div class="card">
            <div class="card-header bg-primary">
                <h2 class="card-title mt-1" id="TitleTable">ประเด็นการตรวจสอบ</h2>
            </div>
            <div class="card-body">
                <div class="col-md-12 table-responsive">
                    <table id="AuditManegementSegmentTable" class="table table-bordered table-striped table-hover" style="width:100%;"></table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        let PageType = 1
        let FacultyID = @(Model != null ? Model.FacultyId : 0)
        $(document).ready(function () {
            var Table = $('#AuditManegementSegmentTable').DataTable({
                serverSide: false,
                bDestroy: true,
                pageLength: 10,
                searching: true,
                info: true,
                filter: true,
                responsive: true,
                lengthMenu: [10, 20, 50, 100, 200, 500, 1000],
                language: {
                    processing: "กำลังประมวลผล...",
                    loadingRecords: "Loading...",
                    lengthMenu: "แสดง _MENU_ รายการ",
                    search: "ค้นหา :",
                    zeroRecords: "<font color='red'><center>ไม่พบข้อมูลที่คุณต้องการ ค้นหา</center></font>",
                    info: "แสดง _START_ ถึง _END_ จากทั้งหมด _TOTAL_ รายการ",
                    infoEmpty: "แสดง 0 ถึง 0 จากทั้งหมด 0 รายการ",
                    infoFiltered: "(ค้นหา จากทั้งหมด _MAX_ รายการ)",
                    paginate: {
                        first: "หน้าแรก",
                        last: "หน้าสุดท้าย",
                        next: "ถัดไป",
                        previous: "ก่อนหน้า",
                    },
                },
                ajax: {
                    url: '@Url.Action("GetAuditManegementSegment", "SetUpSegmentAudit")?FacultyID=' + FacultyID,
                    type: 'GET',
                },
                columns: [
                    {
                        data: null, title: "#", "autoWidth": true, width: "50px",
                        render: function (d, t, r, m) {
                            return m.row + 1;
                        }
                    },
                    {
                        data: 'auditIssueMainName', name: "auditIssueMainName", title: "ประเด็นการตรวจสอบ", "autoWidth": true,
                    },
                    {
                        data: 'startDate', name: "startDate", title: "วันที่", "autoWidth": true,
                    },
                    {
                        data: 'endDate', name: "endDate", title: "วันที่สิ้นสุด", "autoWidth": true,
                    },
                    {
                        data: 'statusName', name: "statusName", title: "สถานะ", "autoWidth": true,
                        render: function (d, t, r) {
                            return `<span class="badge badge-${r.color}">${d}</span>`;
                        }
                    },
                    {
                        data: 'auditManegementSegmentID', name: "auditManegementSegmentID", title: "Action", orderable: false, width: "300px", className: "text-center",
                        render: function (d, t, r) {
                            return `
                                   <div class="btn-group text-center">
                                       <button class="btn btn-sm btn-info" ${r.isExpired ? 'disabled' : ''} onclick="EditAuditManegementSegment('${d}','${r.workingPaperID}')">
                                           <i class="fas fa-edit"></i> แก้ไข
                                       </button>
                                       <button class="btn btn-sm btn-danger" ${r.isExpired ? 'disabled' : ''} onclick="DeleteAuditManegementSegment('${d}','${r.workingPaperID}')">
                                           <i class="fas fa-trash"></i> ลบ
                                       </button>
                                   </div>
                            `;
                        }
                    }
                ],
                order: [[0, 'asc']]
            })
            $('#AuditManegementSegmentTable tbody').on('click', 'tr', function () {
              let RowData = Table.row(this).data()
              if(!RowData || !RowData.auditIssueMainName) return
            });
            $('#TitleContent').html('ตั้งค่าประเด็นการตรวจสอบ')
            $('#TitleTable').html('ประเด็นการตรวจสอบ')
        })

        function DeleteAuditManegementSegment(AuditManegementSegmentID = '', WorkingPaperID = '') {
            if (AuditManegementSegmentID == '') {
                Swal.fire({ icon: 'warning', title: 'แจ้งเตือน', text: 'ไม่พบข้อมูลที่ต้องการลบ' })
                return
            }

            Swal.fire({
                title: 'คุณแน่ใจไหม?',
                text: "คุณจะลบข้อมูล!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#28a745',
                cancelButtonColor: '#d33',
                confirmButtonText: "ตกลง",
                cancelButtonText: "ยกเลิก",
            }).then((result) => {
                if (!result.isConfirmed) return;
                $.ajax({
                    url: '@Url.Action("DeleteAuditManegementSegment", "SetUpSegmentAudit")',
                    type: 'POST',
                    data: { AuditManegementSegmentID: AuditManegementSegmentID },
                    dataType: 'json',
                    success: function (res) {
                        if (!res.status) {
                            Swal.fire({ icon: 'error', title: 'เกิดข้อผิดพลาด', text: res.message })
                            return
                        }
                        Swal.fire({ icon: 'success', title: 'สำเร็จ', text: res.message })
                        LoadDataTable('AuditManegementSegmentTable')
                        $('#Content').html('')
                        $.ajax({
                            url: '@Url.Action("DeleteWorkingPaper", "WorkingPaper")',
                            type: 'POST',
                            data: { WorkingPaperID: WorkingPaperID },
                            dataType: 'json',
                        })
                    }
                })
            })
        }

        function AddAuditManegementSegment() {
            PageType = 1
            $('#Content').html('')
            $('#Segment .card-header').removeClass('bg-warning')
            $.ajax({
                url: `@Url.Action("GetPageForm", "SetUpSegmentAudit")?Type=1&FacultyID=@Model?.FacultyId`,
                type: 'GET',
                success: function (res) {
                    $('#Content').html(res)
                }
            })
        }

        function EditAuditManegementSegment(AuditManegementSegmentID, WorkingPaperID = '') {
            $('#Content').html('')
            let _url = `@Url.Action("GetPageForm", "SetUpSegmentAudit")?Type=2&FacultyID=@Model?.FacultyId&AuditManegementSegmentID=${AuditManegementSegmentID}`
            if (PageType === 2) {
                $('#TitleContent').html('กระดาษทำการ')
                $('#Segment .card-header').addClass('bg-warning')
                _url = `@Url.Action("GetPageFormWorkingPaper", "SetUpSegmentAudit")?WorkingPaperID=${WorkingPaperID}&AuditManegementSegmentID=${AuditManegementSegmentID}`
            }
                
            $.ajax({
                url: _url,
                type: 'GET',
                success: function (res) {
                    $('#Content').html(res)
                }
            })
        }
       
        function GetFormWorkingPaper(AuditManegementSegmentID = '', WorkingPaperID = '') {
            PageType = 2
            $('#Content').html('')
            $('#TitleContent').html('กระดาษทำการ')
            $('#Segment .card-header').addClass('bg-warning')
            $.ajax({
                url: `@Url.Action("GetPageFormWorkingPaper", "SetUpSegmentAudit")?WorkingPaperID=${WorkingPaperID}&AuditManegementSegmentID=${AuditManegementSegmentID}`,
                type: 'GET',
                success: function (res) {
                    $('#Content').html(res)
                }
            })
        }
    </script>
}