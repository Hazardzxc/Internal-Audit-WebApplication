@model STD.Models.DB.WorkingPaper
@using STD.Models.DB
@{
    ViewData["Title"] = "";
    Layout = null;

    List<WorkingPaperActivity> _ListWorkingPaperActivity = new List<WorkingPaperActivity>();
    bool IsReadOnly = false;
    DateOnly _Now = DateOnly.FromDateTime(DateTime.Now);
    if (Model != null)
    {
        using (AuditManager_Connect DB = new AuditManager_Connect())
        {
            _ListWorkingPaperActivity = DB.WorkingPaperActivities.Where(w => w.WorkingPaperId.Equals(Model.WorkingPaperId)).OrderBy(o => o.CreateDate).ToList();
        }

        if (_Now >= DateOnly.FromDateTime(Model.ApproveDate))
            IsReadOnly = true;
    }
}

<table class="table table-bordered table-striped table-hover">
    <thead>
        <tr>
            <th>ลำดับ</th>
            <th width="20%">กิจกรรมการควบคุม</th>
            <th width="30%">วิธีการตรวจสอบ</th>
            <th>ผลการตรวจสอบ</th>
            <th>เป็นประเด็น/ไม่เป็นประเด็น</th>
            <th>ข้อสังเกต</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @if (_ListWorkingPaperActivity != null && _ListWorkingPaperActivity.Count > 0)
        {
            int i = 0;

            using (AuditManager_Connect DB = new AuditManager_Connect())
            {
                foreach (WorkingPaperActivity item in _ListWorkingPaperActivity)
                {
                    i++;
                    AuditIssueSub? _AuditIssueSub = DB.AuditIssueSubs.Where(w => w.AuditIssueSubId.Equals(item.AuditIssueSubId)).FirstOrDefault();
                    List<WorkingPaperActivitySub> _ListWorkingPaperActivitySub = DB.WorkingPaperActivitySubs.Where(w => w.WorkingPaperActivityId.Equals(item.WorkingPaperActivityId)).OrderBy(w => w.CreateDate).ToList();
                    List<WorkingPaperActivityVerify> _ListVerify = DB.WorkingPaperActivityVerifies.Where(w => w.WorkingPaperActivityId.Equals(item.WorkingPaperActivityId)).OrderBy(w => w.CreateDate).ToList();
                    <tr>
                        <td>@i</td>
                        <td>@(_AuditIssueSub != null ? _AuditIssueSub.AuditIssueSubName : "")</td>
                        <td>
                            @if (_ListVerify != null && _ListVerify.Count > 0)
                            {
                                foreach (WorkingPaperActivityVerify itemVerify in _ListVerify)
                                {
                                    AuditIssueActivityVerify? _ObjVerify = DB.AuditIssueActivityVerifies.Where(w => w.AuditIssueActivityId.Equals(itemVerify.AuditIssueActivityId)).FirstOrDefault();
                                    if (_ObjVerify == null) { continue; }
                                    <span>- @_ObjVerify.ActivityDetail</span> <br />
                                }
                            }
                            else
                            {
                                <span>-</span>
                            }
                        </td>
                        <td>@(_ListVerify?.Count > 0 && !string.IsNullOrEmpty(item.InspectionResults) ? item.InspectionResults : "-")</td>
                        <td class="text-center">@(_ListVerify?.Count == 0 ? "-" : item.Issue == 0 ? "รอตรวจสอบ" : item.Issue == 1 ? "เป็นประเด็น" : "ไม่เป็นประเด็น")</td>
                        <td>@(_ListVerify?.Count > 0 && !string.IsNullOrEmpty(item.Notes) ? item.Notes : "-")</td>
                        <td class="text-center">
                            @if (_ListVerify != null && _ListVerify.Count > 0 && IsReadOnly)
                            {
                                <button type="button" class="btn btn-sm btn-info" onclick="WorkingPaperStartActivity('@item.WorkingPaperActivityId')">เริ่มตรวจสอบ</button>
                            }
                            <button type="button" class="btn btn-sm btn-primary" onclick="WorkingPaperActivityDetail('@item.WorkingPaperActivityId')">แก้ไข</button>
                            <button type="button" class="btn btn-sm btn-danger" onclick="DeleteWorkingPaperActivity('@item.WorkingPaperActivityId')">ลบ</button>
                        </td>
                    </tr>
                    if (_ListWorkingPaperActivitySub != null && _ListWorkingPaperActivitySub.Count > 0)
                    {
                        int iSub = 0;
                        foreach (WorkingPaperActivitySub itemSub in _ListWorkingPaperActivitySub)
                        {
                            iSub++;
                            AuditIssueSub? __AuditIssueSub = DB.AuditIssueSubs.Where(w => w.AuditIssueSubId.Equals(itemSub.AuditIssueSubId)).FirstOrDefault();
                            List<WorkingPaperActivitySubVerify> _ListSubVerify = DB.WorkingPaperActivitySubVerifies.Where(w => w.WorkingPaperActivitySubId.Equals(itemSub.WorkingPaperActivitySubId)).OrderBy(w => w.CreateDate).ToList();
                            <tr>
                                <td>@i.@iSub</td>
                                <td>@(__AuditIssueSub != null ? __AuditIssueSub.AuditIssueSubName : "")</td>
                                <td>
                                    @if (_ListSubVerify != null && _ListSubVerify.Count > 0)
                                    {
                                        foreach (WorkingPaperActivitySubVerify itemVerify in _ListSubVerify)
                                        {
                                            AuditIssueActivityVerify? _ObjVerify = DB.AuditIssueActivityVerifies.Where(w => w.AuditIssueActivityId.Equals(itemVerify.AuditIssueActivityId)).FirstOrDefault();
                                            if (_ObjVerify == null) { continue; }
                                            <span>- @_ObjVerify.ActivityDetail</span> <br />
                                        }
                                    }
                                    else
                                    {
                                        <span>-</span>
                                    }
                                </td>
                                <td>@(_ListSubVerify?.Count > 0 && !string.IsNullOrEmpty(itemSub.InspectionResults) ? itemSub.InspectionResults : "-")</td>
                                <td class="text-center">@(_ListSubVerify?.Count == 0 ? "-" : itemSub.Issue == 0 ? "รอตรวจสอบ" : itemSub.Issue == 1 ? "เป็นประเด็น" : "ไม่เป็นประเด็น")</td>
                                <td>@(_ListSubVerify?.Count > 0 && !string.IsNullOrEmpty(itemSub.Notes) ? item.Notes : "-")</td>
                                <td class="text-center">
                                    @if (_ListSubVerify != null && _ListSubVerify.Count > 0 && IsReadOnly)
                                    {
                                        <button type="button" class="btn btn-sm btn-info" onclick="WorkingPaperStartActivitySub('@itemSub.WorkingPaperActivitySubId')">เริ่มตรวจสอบ</button>
                                    }
                                    <button type="button" class="btn btn-sm btn-primary" onclick="WorkingPaperActivityDetail('@item.WorkingPaperActivityId')">แก้ไข</button>
                                    <button type="button" class="btn btn-sm btn-danger" onclick="DeleteWorkingPaperActivitySub('@itemSub.WorkingPaperActivitySubId')">ลบ</button>
                                </td>
                            </tr>
                        }
                    }
                }
            }
        }
        else
        {
            <tr>
                <td colspan="7" class="text-center text-danger font-weight-bold">ไม่พบข้อมูล</td>
            </tr>
        }
    </tbody>
</table>

<script type="text/javascript">
    function WorkingPaperStartActivity(WorkingPaperActivityID = '') {
        window.location.href = '@Url.Action("GetWorkingPaperActivityStartVerifyPage", "WorkingPaper")?WorkingPaperActivityID=' + WorkingPaperActivityID
    }
    function WorkingPaperActivityDetail(WorkingPaperActivityID = '') {
        window.location.href = '@Url.Action("GetWorkingPaperActivityDetailPage", "WorkingPaper")?WorkingPaperActivityID=' + WorkingPaperActivityID
    }
    function WorkingPaperStartActivitySub(WorkingPaperActivitySubID = '') {
         window.location.href = '@Url.Action("GetWorkingPaperActivityStartSubVerifyPage", "WorkingPaper")?WorkingPaperActivitySubID=' + WorkingPaperActivitySubID
    }
</script>